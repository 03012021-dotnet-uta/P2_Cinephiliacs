# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  solution: 'cine.sln'
  angPath: 'AngularApp'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    packageType: 'sdk'
    version: '5.0.x'

- task: UseDotNet@2
  displayName: 'Install .NET Core Runtime'
  inputs:
    packageType: 'runtime'
    version: '2.x'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  displayName: 'NPM Install'
  inputs:
    command: 'install'
    workingDir: $(angPath)

#- task: Npm@1
#  displayName: 'NPM Install Angular CLI'
#  inputs:
#    command: 'custom'
#    workingDir: $(angPath)
#    customCommand: 'install -g @angular/cli@latest'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Sonar Cloud'
    organization: 'tmgsat'
    scannerMode: 'MSBuild'
    projectKey: 'tmgsat_Cinephiliacs'
    projectName: 'Cinephiliacs'

- task: DotNetCoreCLI@2
  displayName: 'Building'
  inputs:
    command: 'build'
    projects: '$(AngularApp)'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: 'Testing'
  inputs:
    command: 'test'
    projects: '$(AngularApp)'
    arguments: '--configuration $(buildConfiguration) --collect "Code Coverage"'
    testRunTitle: 'Dotnet tests running'

- task: Npm@1
  displayName: 'NPM Build Angular'
  inputs:
    command: 'custom'
    workingDir: $(solution)
    customCommand: 'ng build --prod'

- task: Npm@1
  displayName: 'NPM Test'
  inputs:
    command: 'custom'
    workingDir: $(solution)
    customCommand: 'run test-headless'

# - task: PublishCodeCoverageResults@1
#   inputs:
#     codeCoverageTool: 'Cobertura'
#     summaryFileLocation: '**/coburtura/coverage.xml'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: 'Publishing'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '$(solution)'
    zipAfterPublish: true

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(6b046a51-8f67-4253-b7de-78eea66e9f0d)'
    appType: 'webApp'
    WebAppName: 'CinephiliacsAPI'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'